
<dw:set-payload><![CDATA[%dw 1.0
%output application/xml 
---
{
	Invoice: {
     InvoiceHeader @(issuedBySupplierID : flowVars.issuedBySupplierID , issuedBySupplierName : flowVars.issuedBySupplierName) : {
			(payload.transaction.*segment map ((a,b) -> {
			(a.*element map ((c,d) -> { (number: c )  when c.@Id == 'BIG02'}))
			})),
			poNumber: flowVars.Big04,
			(payload.transaction.*segment map ((a,b) -> {
			(a.*element map ((c,d) -> { (dateIssued: c )  when c.@Id == 'BIG01'})),
			(a.*element map ((c,d) -> { (purpose: c )  when c.@Id == 'BIG07'}))
			})),
			transMethod: 'EDI',  
			( payload.transaction.*segment[?($.@Id == 'ITD')] map ((a,b) -> {
				(a.*element map ((c,d) -> { (type: c )  when c.@Id == 'ITD12' and b == d }))	
			})),
	       comment : ( payload.transaction.*segment default [] filter $.@Id == 'MSG').*element default [] filter $.@Id == 'MSG01' joinBy ' '		
		},
	InvoiceCosts :{
			totalCostNetOfTax :sum ( payload.transaction.*segment default [] filter $.@Id == 'IT1' map ((($.*element filter  $.@Id == 'IT104')[0] * ($.*element filter  $.@Id == 'IT102')[0]))),
			totalCostNetOfTaxCurrency: 'USD',
			(payload.transaction.*segment map ((a,b) -> {				
				(a.*element map ((c,d) -> { (totalCostWithTax: c/100)  when c.@Id == 'TDS01'}))
			})),
			totalCostWithTaxCurrency: 'USD',
			(payload.transaction.*segment map ((a,b) -> {	
				(a.*element map ((c,d) -> { (totalTax: c)  when c.@Id == 'TXI02' and a.element.@Id == 'TXI01' and a.element == 'SU' }))
			})), 
			totalTaxCurrency : 'USD',
			(Charges: {
				(payload.transaction.*segment default [] map ((a,b) -> {				
				(a.*element map ((c,d) -> { 					
					(ChargeCode: c)  when c.@Id == 'SAC01' and (c == 'C' or c == 'A'),
					(ChargeAmount: c/100)  when c.@Id == 'SAC05' and (a.element == 'C' or a.element == 'A') ,
					(ChargeDescription: c)  when c.@Id == 'SAC15' and (a.element == 'C' or a.element == 'A')
				}))
			}))
			}) when ( sizeOf (payload.transaction.*segment default [] filter $.@Id == 'SAC')) != 0 
		},
	InvoiceDetail: { ( payload.transaction.*segment  map ((a,b) -> {
	   (createList( sum (a.*element filter  $.@Id == 'IT102')) map ((k,l) -> {	  	
	  	InvoiceLineItem: { 
	  		(a.*element map ((c,d) -> { (lineNumber: c ++ '-' ++ l when l > 0 otherwise c)  when c.@Id == 'IT101'})),
	  		quantity: '1', ////////  recheck again
	  		(a.*element map ((c,d) -> { (unitPrice: c )  when c.@Id == 'IT104'})),
            (a.*element map ((c,d) -> { (invoiceLineSKU: c )  when c.@Id == 'IT107'})),
            ( payload.transaction.*segment default [] map ((c,d) -> {            	
            	(c.*element map ((e,f) -> { (invoiceLineDescription: e )  when e.@Id == 'PID05' and d == b + 2}))
            })),
      ( payload.transaction.*segment default [] map ((g,h) -> {	 
            	(g.*element map ((i,j) -> { (serialNumber: i )  when i.@Id == 'SLN10' and h == b + 3 + l })) 
            }))  
	  	} })) }
	  ))} 
}}]]></dw:set-payload>
            <dw:set-variable variableName="serialNumbers"><![CDATA[%dw 1.0
%output application/xml
---
{
	serialNumbers: {
		
		((payload.transaction.*segment default [] filter $.@Id == 'SLN').*element default [] filter $.@Id == 'SLN10' )
	}
}]]></dw:set-variable>
        </dw:transform-message>
