
<http:listener-config name="httpListenerConfig" host="${http.listener.host}" port="${http.listener.port}" doc:name="HTTP Listener Configuration" protocol="HTTPS">
        <tls:context>
            <tls:key-store keyPassword="${cert.password}" password="${cert.password}" path="${cert.path}" type="pkcs12"/>
        </tls:context>
    </http:listener-config> 
	
	
	<wmq:connector  name="WMQ_NON_PERSISTENT" queueManager="${wmq.qm}" transportType="CLIENT_MQ_TCPIP" validateConnections="true" doc:name="WMQ" channel="${wmq.qm.channel}" hostName="${wmq.host}" port="${wmq.port}" username="${wmq.user}">
		<reconnect count="${wmq.reconnection.attempts}" frequency="${wmq.reconnection.frequency}" blocking="false"/>
		<service-overrides dispatcherFactory="com.mulesoft.services.CustomWMQDispatcherFactory" />
	</wmq:connector>

   	<wmq:connector  name="JMSQ_NON_PERSISTENT" hostName="${wmq.host}" port="${wmq.port}" username="${wmq.user}" queueManager="${wmq.qm}" transportType="CLIENT_MQ_TCPIP" validateConnections="true" doc:name="JMS"  channel="${wmq.qm.channel}" specification="1.1" targetClient="JMS_COMPLIANT">
		<reconnect count="${jms.reconnection.attempts}" frequency="${jms.reconnection.frequency}" blocking="false"/>
		<service-overrides dispatcherFactory="com.mulesoft.services.CustomWMQDispatcherFactory" />
	</wmq:connector>
	
	
	<wmq:connector  name="WMQ" queueManager="${wmq.qm}" transportType="CLIENT_MQ_TCPIP" validateConnections="true" doc:name="WMQ" channel="${wmq.qm.channel}" hostName="${wmq.host}" port="${wmq.port}" username="${wmq.user}" numberOfConsumers="${wmq.consumers}" persistentDelivery="${wmq.persistence}">
		<reconnect count="${wmq.reconnection.attempts}" frequency="${wmq.reconnection.frequency}" blocking="false"/>
		<service-overrides dispatcherFactory="com.mulesoft.services.CustomWMQDispatcherFactory" />
	</wmq:connector>

   	<wmq:connector  name="JMS" hostName="${wmq.host}" port="${wmq.port}" username="${wmq.user}" queueManager="${wmq.qm}" transportType="CLIENT_MQ_TCPIP" validateConnections="true" doc:name="JMS"  channel="${wmq.qm.channel}" specification="1.1" targetClient="JMS_COMPLIANT" persistentDelivery="${jms.persistence}">
		<reconnect count="${jms.reconnection.attempts}" frequency="${jms.reconnection.frequency}" blocking="false"/>
		<service-overrides dispatcherFactory="com.mulesoft.services.CustomWMQDispatcherFactory" />
	</wmq:connector>
    
    <wmq:connector  name="WMQ_FOR_CUSTOM_FLOWS" queueManager="${wmq.qm}" transportType="CLIENT_MQ_TCPIP" validateConnections="true" doc:name="WMQ" channel="${wmq.qm.channel}" hostName="${wmq.host}" port="${wmq.port}" username="${wmq.user}" numberOfConsumers="1" persistentDelivery="${wmq.persistence}">
		<reconnect count="${wmq.reconnection.attempts}" frequency="${wmq.reconnection.frequency}" blocking="false"/>
		<!-- <service-overrides dispatcherFactory="com.mulesoft.services.CustomWMQDispatcherFactory" /> -->
	</wmq:connector>
  
  <spring:beans>
        <spring:bean id="WebSphereMQConnectionFactory" class="com.ibm.mq.jms.MQConnectionFactory">
            <spring:property name="hostName" value="${wmq.host}"/>
            <spring:property name="port" value="${wmq.port}"/>
            <spring:property name="queueManager" value="${wmq.qm}"/>
            <spring:property name="transportType"  value="1"/>
            <spring:property name="channel" value="${wmq.qm.channel}"/>          
        </spring:bean>
    </spring:beans>	
	
	<jms:connector name="JMS_TOPIC" specification="1.1"   validateConnections="true" connectionFactory-ref="WebSphereMQConnectionFactory" doc:name="JMS_TOPIC" username="${wmq.user}">
		<reconnect count="${jms.reconnection.attempts}" frequency="${jms.reconnection.frequency}" blocking="false"/>
	</jms:connector>
	
	package com.mulesoft.services;

import org.mule.api.MuleException;
import org.mule.api.endpoint.OutboundEndpoint;
import org.mule.api.transport.MessageDispatcher;

import com.mulesoft.mule.transport.wmq.WebSphereMQMessageDispatcherFactory;

public class CustomWMQDispatcherFactory extends WebSphereMQMessageDispatcherFactory {
	@Override
	public MessageDispatcher create(OutboundEndpoint endpoint) throws MuleException {
		
		return new IDPublisherWMQMessageDispatcher(endpoint);
	}
}

package com.mulesoft.services;

import java.util.logging.Logger;

import javax.jms.Message;

import org.mule.api.MuleEvent;
import org.mule.api.MuleMessage;
import org.mule.api.endpoint.OutboundEndpoint;
import org.mule.api.transport.PropertyScope;

import com.mulesoft.mule.transport.wmq.WebSphereMQMessageDispatcher;

public class IDPublisherWMQMessageDispatcher extends WebSphereMQMessageDispatcher {

	private static Logger LOGGER = Logger.getLogger(IDPublisherWMQMessageDispatcher.class.getName());
	
	private static final String GENERATED_JMS_MESSAGE_ID = "generatedJMSMessageID";

	public IDPublisherWMQMessageDispatcher(OutboundEndpoint endpoint) {
		super(endpoint);
	}
	
	@Override
	protected MuleMessage doSend(MuleEvent event) throws Exception {
		MuleMessage ret = super.doSend(event);
		Message msg = (Message) event.getMessage().getPayload();
		String id = msg.getJMSMessageID();
		event.setFlowVariable(GENERATED_JMS_MESSAGE_ID, id);		
		
		ret.setProperty(GENERATED_JMS_MESSAGE_ID, id, PropertyScope.INVOCATION);
		LOGGER.info("generatedJMSMessageID :: " + id);
		
		return ret;
	}
	
	@Override
	protected void doDispatch(MuleEvent event) throws Exception {
		super.doDispatch(event);
		
		Message msg = (Message) event.getMessage().getPayload();
		String id = msg.getJMSMessageID();
		event.setFlowVariable(GENERATED_JMS_MESSAGE_ID, id);
		
		LOGGER.info("generatedJMSMessageID :: " + id);
		
	}
	
}
