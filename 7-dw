%dw 1.0
%output application/json
%var xoo =[0,1,2,3]
%var test = [[0,1,2,3],[0,1,5,6]]
%var boo = xoo filter $$ < 1 map (c,d) -> 
	( test filter $[0] == c  map (a,b) -> {
		
		one : a[0],
		two : a[1],
		three :a[2],
		four : a[3]
		
	}) reduce ( $$ ++ $ )

---
boo 


++++++++++++++++++++++++++++++


<flow name="tet01Flow2">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/test" doc:name="HTTP"/>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <enricher doc:name="Message Enricher" target="#[flowVars.listOfMapsResultFromDB]">
            <spanner:select config-ref="Google_Cloud_Spanner__Configuration" query="SELECT SCN,TCN FROM SOURCE_TARGET_MAPPING WHERE TABLE_NAME = '#[dw(&quot;payload.Root.Table&quot;)]'" doc:name="Google Cloud Spanner"/>
        </enricher>
        <dw:transform-message doc:name="Transform Message" metadata:id="6f809927-e5ab-46cd-8fdb-24e58624007e">
            <dw:input-payload doc:sample="test.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var sourceTargetMap =flowVars.listOfMapsResultFromDB  map {($.SCN) : $.TCN} reduce ($$ ++ $)
%function getKey(key) sourceTargetMap.'$key' when sourceTargetMap.'$key'? otherwise '$key'
---
payload mapObject {
     (getKey($$)) :  $ when not ($ is :object) otherwise $ mapObject {
     	(getKey($$)) :  $ when not ($ is :object) otherwise $ mapObject {
     		(getKey($$)) :  $ when not ($ is :object) otherwise $ mapObject {
     		    (getKey($$)) :  $ when not ($ is :object) otherwise $ mapObject {
     		       (getKey($$)) :  $ when not ($ is :object) otherwise $ mapObject {
     		           (getKey($$)) :  $ when not ($ is :object) otherwise $ mapObject {
     		                 (getKey($$)) :  $
     	                }	
     	            }	
     	        }	
     	    }	
     	}	
    } 
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
